<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: build.xml,v 1.19.2.1 2006/08/02 12:13:06 Yuki Exp $ -->
<project default="dist">

	<property name="version" value="3.0.1.2" />

	<property environment="env" />

	<property name="bin" value="compiler" />
	<property name="lib" value="lib" />
	<property name="runtime" value="runtime" />
	<property name="compiler" value="compiler" />
	<property name="bootup" value="bootup" />
	<property name="sample_src" value="sample" />
	<property name="demo_src" value="demo" />
	<property name="doc_src" value="doc" />
	<property name="ext_src" value="ext" />
	<property name="bootup_sln" value="${bootup}/bootup.sln" />
	<property name="asm" value="asm-all-3.3" />

	<property name="dist" value="dist" />
	<property name="temp" value="${dist}/jartemp" />
	<property name="hsplet_jar" value="${dist}/hsplet.jar" />
	<property name="compiler_jar" value="${dist}/compiler.jar" />
	<property name="javadoc" value="api" />
	<property name="sample_dist" value="${dist}/sample" />
	<property name="demo_dist" value="${dist}/demo" />
	<property name="doc_dist" value="${dist}/doc" />
	<property name="ext_dist" value="${dist}/ext" />

	<target name="dist">

		<delete dir="${dist}" />

		<mkdir dir="${dist}" />
		<mkdir dir="${dist}/output" />

		<copy todir="${dist}/lib">
			<fileset dir="${lib}" includes="**/*" />
		</copy>
		<copy file="./readme.txt" todir="${dist}" />
		<copy file="./history.txt" todir="${dist}" />
		<copy file="./letutil.hsp" todir="${dist}" />
		<copy file="${bin}/hsplet/compiler/template.html" tofile="${dist}/sample-template.html" />

		<antcall target="hsplet_jar" />
		<antcall target="compiler_jar" />
		<antcall target="ext_jar" />
		<antcall target="sample" />
		<antcall target="demo" />
		<antcall target="bootup" />
		<antcall target="doc" />



		<zip destfile="${dist}/src.zip">
			<zipfileset dir=".">
				<include name="**/*" />
				<exclude name="${bin}/**/*" />
				<exclude name="${dist}/**/*" />
				<exclude name="**/*.ncb" />
				<exclude name="**/Debug/**/*" />
				<exclude name="**/Release/**/*" />
				<exclude name="${javadoc}/**/*" />
				<exclude name="compiler.settings" />
				<exclude name="**/CVS" />
			</zipfileset>
		</zip>

		<zip destfile="${dist}/HSPLet ${version}.zip">
			<zipfileset dir="${dist}">
				<include name="**/*" />
				<exclude name="HSPLet *.zip" />
			</zipfileset>
		</zip>

	</target>

	<target name="hsplet_jar">

		<mkdir dir="${temp}" />

		<copy todir="${temp}">
			<fileset dir="${runtime}">

				<include name="hsplet/**/*" />
				<exclude name="hsplet/compiler/**/*" />

			</fileset>
		</copy>

		<jar jarfile="${hsplet_jar}" basedir="${temp}">
			<manifest>
				<attribute name="Manifest-Version" value="1.0" />
				<attribute name="Created-By" value="Yuki" />
				<attribute name="Signature-Version" value="1.0" />
				<attribute name="Class-Path" value="lib/${asm}.jar lib/BrowserLauncher2-10rc4.jar ext/*" />
			</manifest>
		</jar>

		<delete dir="${temp}" />

	</target>
	<target name="compiler_jar">

		<mkdir dir="${temp}" />

		<copy todir="${temp}">
			<fileset dir="${bin}">

				<include name="hsplet/compiler/**/*" />

			</fileset>
		</copy>

		<jar jarfile="${compiler_jar}" basedir="${temp}">
			<manifest>
				<attribute name="Manifest-Version" value="1.0" />
				<attribute name="Created-By" value="Yuki" />
				<attribute name="Signature-Version" value="1.0" />
				<attribute name="Class-Path" value="ext/* hsplet.jar lib/${asm}.jar lib/BrowserLauncher2-10rc4.jar" />
				<attribute name="Main-Class" value="hsplet.compiler.Launcher" />
			</manifest>
		</jar>

		<delete dir="${temp}" />

	</target>

	<target name="ext_jar">

		<mkdir dir="${ext_dist}" />

		<mkdir dir="${temp}" />
		<copy todir="${temp}">
			<fileset dir="${bin}">
				<include name="winmm.class" />
			</fileset>
		</copy>
		<jar jarfile="${ext_dist}/winmm.jar" basedir="${temp}" />
		<delete dir="${temp}" />

		<mkdir dir="${temp}" />
		<copy todir="${temp}">
			<fileset dir="${bin}">
				<include name="hspsock.class" />
				<include name="hspsockBase*" />
			</fileset>
		</copy>
		<jar jarfile="${ext_dist}/hspsock.jar" basedir="${temp}" />
		<delete dir="${temp}" />

		<mkdir dir="${temp}" />
		<copy todir="${temp}">
			<fileset dir="${bin}">
				<include name="hspsockA.class" />
				<include name="hspsockBase*" />
			</fileset>
		</copy>
		<jar jarfile="${ext_dist}/hspsockA.jar" basedir="${temp}" />
		<delete dir="${temp}" />

		<mkdir dir="${temp}" />
		<copy todir="${temp}">
			<fileset dir="${bin}">
				<include name="hspini.class" />
			</fileset>
		</copy>
		<jar jarfile="${ext_dist}/hspini.jar" basedir="${temp}" />
		<delete dir="${temp}" />

		<mkdir dir="${temp}" />
		<copy todir="${temp}">
			<fileset dir="${bin}">
				<include name="user32*" />
			</fileset>
		</copy>
		<jar jarfile="${ext_dist}/user32.jar" basedir="${temp}" />
		<delete dir="${temp}" />

	</target>
	<target name="whole_ext_jar">
		<mkdir dir="${ext_dist}" />
		<mkdir dir="${temp}" />
		<copy todir="${temp}">
			<fileset dir="${ext_dist}">
				<include name="*.class" />
				<include name="interfaces/*.class" />
			</fileset>
		</copy>
		<jar jarfile="${ext_dist}/ext.jar" basedir="${temp}" />
		<delete dir="${temp}" />
	</target>
	<target name="sample">

		<copy todir="${sample_dist}">
			<fileset dir="${sample_src}">
				<include name="*.hsp" />
				<include name="*.ax" />
				<include name="*.mid" />
			</fileset>
		</copy>
		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=sample/basic.jar" />
			<arg value="--html=sample/basic.html" />
			<arg value="--pack=sample/basic.ax" />
			<arg value="--startClass=basic" />
			<arg value="--title=Basic" />
			<arg value="--libdir=ext" />
		</java>


		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=sample/d3module.jar" />
			<arg value="--html=sample/d3module.html" />
			<arg value="--pack=sample/d3module.ax" />
			<arg value="--startClass=d3module" />
			<arg value="--title=d3module with HSPLet" />
			<arg value="--libdir=ext" />
		</java>


		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=sample/sound.jar" />
			<arg value="--html=sample/sound.html" />
			<arg value="--pack=sample/sound.ax" />
			<arg value="--startClass=sound" />
			<arg value="--title=Sound" />
			<arg value="--libdir=ext" />
		</java>
		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=sample/network.jar" />
			<arg value="--html=sample/network.html" />
			<arg value="--pack=sample/network.ax" />
			<arg value="--startClass=network" />
			<arg value="--title=Network" />
			<arg value="--libdir=ext" />
		</java>
		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=sample/cookie.jar" />
			<arg value="--html=sample/cookie.html" />
			<arg value="--pack=sample/cookie.ax" />
			<arg value="--startClass=cookie" />
			<arg value="--title=クッキー" />
			<arg value="--libdir=ext" />
		</java>
		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=sample/menu.jar" />
			<arg value="--html=sample/menu.html" />
			<arg value="--pack=sample/menu.ax" />
			<arg value="--startClass=menu" />
			<arg value="--title=メニュー" />
			<arg value="--libdir=ext" />
		</java>
	</target>
	<target name="demo">

		<copy todir="${demo_dist}">
			<fileset dir="${demo_src}">
				<include name="*.hsp" />
				<include name="*.ax" />
				<include name="*.mid" />
			</fileset>
		</copy>
		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=demo/shogi.jar" />
			<arg value="--html=demo/shogi.html" />
			<arg value="--pack=demo/shogi.ax" />
			<arg value="--startClass=shogi" />
			<arg value="--title=将棋暫定版" />
			<arg value="--libdir=ext" />
		</java>
		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=demo/netball.jar" />
			<arg value="--html=demo/netball.html" />
			<arg value="--pack=demo/net-ball.ax" />
			<arg value="--startClass=netball" />
			<arg value="--title=Net-Ball" />
			<arg value="--libdir=ext" />
		</java>
		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=demo/nanoflower.jar" />
			<arg value="--html=demo/nanoflower.html" />
			<arg value="--pack=demo/nanoflower.ax" />
			<arg value="--startClass=nanoflower" />
			<arg value="--title=ナノ花" />
			<arg value="--libdir=ext" />
		</java>
		<java jar="${dist}/compiler.jar" dir="${dist}" fork="true">
			<arg value="Compiler" />
			<arg value="--jar=demo/cube.jar" />
			<arg value="--html=demo/cube.html" />
			<arg value="--pack=demo/cube.ax" />
			<arg value="--startClass=cube" />
			<arg value="--title=ルービックキューブ" />
			<arg value="--libdir=ext" />
		</java>
	</target>
	<target name="bootup">

		<exec executable="${env.VS71COMNTOOLS}\..\IDE\devenv">
			<arg value="${bootup_sln}" />
			<arg value="/build" />
			<arg value="Release" />
		</exec>

		<copy file="${bootup}/Release/bootup.exe" tofile="${dist}/compiler.exe" />
	</target>

	<target name="doc">

		<xslt style="${doc_src}/contents.xslt" in="${doc_src}/reference.xml" out="${doc_src}/contents.html" force="true" />
		<xslt style="${doc_src}/page.xslt" in="${doc_src}/introduction.xml" out="${doc_src}/introduction.html" force="true" />
		<xslt style="${doc_src}/page.xslt" in="${doc_src}/sample.xml" out="${doc_src}/sample.html" force="true" />
		<xslt style="${doc_src}/page.xslt" in="${doc_src}/compiler.xml" out="${doc_src}/compiler.html" force="true" />
		<xslt style="${doc_src}/page.xslt" in="${doc_src}/faq.xml" out="${doc_src}/faq.html" force="true" />
		<xslt style="${doc_src}/functions.xslt" in="${doc_src}/reference.xml" out="${doc_src}/functions.html" force="true" />

		<copy todir="${doc_dist}">
			<fileset dir="${doc_src}">
				<include name="**/*.html" />
				<include name="**/*.jpg" />
				<include name="**/*.css" />
			</fileset>

		</copy>
	</target>

</project>